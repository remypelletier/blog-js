// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id                   Int       @id @default(autoincrement())
  name                 String    @db.VarChar(64)
  email                String    @unique @db.VarChar(256)
  password             String    @db.VarChar(256)
  resetPasswordToken   String?   @db.VarChar(256)
  resetPasswordExpired String?   @db.VarChar(256)
  role                 Role      @default(USER)
  createdAt            DateTime  @default(now())
  posts                Post[]
  comments             Comment[]
}

model Post {
  id          Int       @id @default(autoincrement())
  slug        String    @unique @db.VarChar(256)
  title       String    @db.VarChar(256)
  description String    @db.Text
  content     String    @db.Text
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  published   Boolean   @default(false)
  userId      Int       
  user        User      @relation(fields: [userId], references: [id])
  comments    Comment[]
  tagPosts    PostToTag[]
  tags        Tag[]     @relation("PostToTag")
}

model Tag {
  id         Int       @id @default(autoincrement())
  slug       String    @unique @db.VarChar(64)
  name       String    @db.VarChar(64)
  createdAt  DateTime  @default(now())
  postTags   PostToTag[]
  posts      Post[]    @relation("PostToTag")
}

model Project {
  id          Int      @id @default(autoincrement())
  slug        String   @unique @db.VarChar(256)
  title       String   @db.VarChar(256)
  description String   @db.Text
  content     String   @db.Text
  createdAt   DateTime @default(now())
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String   @db.Text
  createdAt DateTime
  userId    Int?      
  user      User?     @relation(fields: [userId], references: [id])
  postId    Int?      
  post      Post?     @relation(fields: [postId], references: [id])
}

model PostToTag {
  postId Int    
  post   Post   @relation(fields: [postId], references: [id])
  tagId  Int   
  tag    Tag    @relation(fields: [tagId], references: [id])
  @@id([postId, tagId])
}